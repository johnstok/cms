The project development setup is quite simple but it is preferred to do in this order (for example Eclipse plugins should be present before checkout/import).

h2. Read through some guidelines

* "Java code style":../quality/code-style-java.textile
* "SQL code style":../quality/code-style-sql.textile
* "Testing strategy":../testing/testing-strategy.textile

h2. Necessary tools

* "Maven 2.2.x":http://maven.apache.org/ (Or install through package manager if using linux).
* SVN ("SmartSVN":http://www.syntevo.com/ preferred).
* "Eclipse (Galileo)":http://www.eclipse.org.

h2. Dependencies

Maven central repository contains most of the dependencies.

Civic has Sonatype Nexus repository running at "http://apollo-vm226:8081/nexus":http://apollo-vm226:8081/nexus which contains 3rd party and proprietary dependencies.

Check "MavenSettings":maven-settings.textile for configuration.

h2. Eclipse configurations

Install plugins and configuration files as described in "EclipseSetup":eclipse-setup.tracwiki.

h2. Check out CCC7

h3. Checkout with Eclipse

* Import the CCC7 project located at "http://svn.civiccomputing.com/ContentControl/trunk/":http://svn.civiccomputing.com/ContentControl/trunk/ as a new project.
* Delete the project from eclipse but do no delete the files from disk.
* Import maven projects using _import -> Maven Projects_ and browse to where you checked out CCC7 and then to the @build@ folder.

Eclipse will then import all of the Maven projects into eclipse.

You may have to refresh all the projects for eclipse to pick up the repository location
A Maven build should start once the files have been imported. On finishing the build there should be two files which are not compiling:

* @InputStream.java@
* @UUID.java@

These files are required for compiling GWT, you should exclude them from your project (_right click -> build path -> exclude_).

h3. Checkout with Other

If check out was done outside Eclipse, you can simply import the maven projects using _import -> Maven Projects._ from the directory you checked out to.

h2. Import JBoss Project

Even though it is possible to start and control JBoss outside Eclipse, having a launch target for JBoss enables easier debugging etc. 
Import the JBoss project into eclipse located at @../CCC7/deploy/jboss-5.0.1.GA-jdk6/@.

You will need to change the location of the @run.jar@ for the Eclipse project to the location of your JBoss installation.

h2. Configuration

If it doesn't exist create a file in the folder @~/m2@ called @settings.xml@

Edit the @settings.xml@ file so that it contains the configuration details from "MavenSettings":maven-settings.textile

Be sure to change the application name to the name of your application.

Also the DB connection parameters and paths for file-store and Lucene index are defined in @~/.m2/settings.xml@.

h2. Building

On command line, change to the CCC7 build directory @.../CCC7/build@ that you checked out into.
Execute: @mvn clean install@

If there are errors, check first that local Nexus repository is available or that all necessary dependencies are installed locally.

To speed up the build during development you can un-comment the line @<set-property name="user.agent" value="gecko1_8" />@ defined in @.../build/modules/client-gwt/src/main/resources/ccc/client/gwt/ContentCreator.gwt.xml@. This will tell GWT compiler to create only a FF compatible version of the JS.

