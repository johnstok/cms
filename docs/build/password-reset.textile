h2. Forgotten password reset

At the moment this needs to be added separately if a site requires to have forgotten password reseting functionality.

The  password reseting happens in two parts. 

First, the user requests password reset and that sets secret token (token) and expiry (tokenExpiry) to user's metadata. These two fields are not visible for the client side.  The secret token is emailed to user's email address.  The email is generated using Velocity and a text file containing the template (/assets/scripts/reset_email.txt).

After receiving the token, user follows the link in the email to another form where he enters new password. The token is passed as a request parameter. After successful password reset the token and tokenExpiry are removed from the user's metadata.

h3. Token request form

The form should have action to the token.js and have 'username' input:

<pre>
<html>
  <head/>
  <body>
    <form action="/assets/scripts/token.js" method=POST>
      <input name="username"/>
      <input type="submit"/>
    </form>
  </body>
</html>
</pre>


h3. token.js

The script calls sendToken method:

<pre>
var ccc = Packages.ccc;
var users = services.getUsers();
var token = request.getParameter("username");
// validation omitted
users.sendToken(username);
</pre>

h3. /assets/scripts/reset_email.txt

This will be used to generate the email. It has the secret token available as $token.  
The subject and from address can be configured in the metadata of this text file using keys 'fromAddress' and 'subject'.

<pre>
You have requested a password reset.
Go to url http://domain/resetpw?token=$token
</pre>


h3. Set password form

New password setting requires another form. Create a new template for it so you can read the
token from the request.

<pre>
<html>
  <head/>
  <body>
    <form action="/assets/scripts/reset.js" method=POST>
      <input type="hidden" name="token" value="$request.getParameter("token")"/>
      <input name="password1"/>
      <input name="password2"/>
      <input type="submit"/>
    </form>
  </body>
</html>
</pre>

h3. reset.js

The script calls resetPassword method:

<pre>
var ccc = Packages.ccc;
var users = services.getUsers();
var error;
var password = request.getParameter("password1");
var password2 = request.getParameter("password2");
var token     = request.getParameter("token");
// Validation
var errors = new java.util.ArrayList();
if (password==null || 0==password.trim().length()) {
    errors.add("Missing password!\n");
}
if (password2==null || 0==password2.trim().length()) {
    errors.add("Missing confirm password!\n");
}
if (password!=null && password2!=null && password != password2) {
    errors.add("Passwords did not match!\n");
}
if (!ccc.api.types.Password.isStrong(password)) {
    errors.add("Passwords was not strong enough!\n");
}
if (!ccc.api.types.Password.hasOnlyValidChars(password)) {
    errors.add("Passwords has invalid characters!\n");
}
if (0==errors.size()) {
	try {
		users.resetPassword(password, token); 
	} catch(e) {
		if (e.javaException instanceof ccc.api.exceptions.CCException) {
	 		error = "fail "+e.javaException.getMessage();
		}
	}
}
</pre>
